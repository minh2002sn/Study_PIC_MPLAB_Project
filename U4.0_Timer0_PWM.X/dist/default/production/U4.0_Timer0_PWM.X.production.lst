

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jul 21 10:40:37 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0008                     _PORTDbits	set	8
   170  0008                     _PORTD	set	8
   171  000B                     _INTCONbits	set	11
   172  0001                     _TMR0	set	1
   173  0088                     _TRISD	set	136
   174  0081                     _OPTION_REG	set	129
   175                           
   176                           	psect	cinit
   177  000F                     start_initialization:	
   178                           ; #config settings
   179                           
   180  000F                     __initialization:
   181                           
   182                           ; Clear objects allocated to COMMON
   183  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   184  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   185  0011                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188  0011                     __end_of__initialization:
   189  0011  0183               	clrf	3
   190  0012  120A  118A  2841   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	bssCOMMON
   193  0070                     __pbssCOMMON:
   194  0070                     ISR@counter:
   195  0070                     	ds	2
   196                           
   197                           	psect	cstackCOMMON
   198  0072                     __pcstackCOMMON:
   199  0072                     ?_main:
   200  0072                     ?_ISR:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0072                     ??_ISR:	
   204                           ; 1 bytes @ 0x0
   205                           
   206                           
   207                           ; 1 bytes @ 0x0
   208  0072                     	ds	2
   209  0074                     ??_main:
   210                           
   211                           	psect	maintext
   212  0041                     __pmaintext:	
   213                           ; 1 bytes @ 0x2
   214 ;;
   215 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   216 ;;
   217 ;; *************** function _main *****************
   218 ;; Defined at:
   219 ;;		line 3 in file "main.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;		None
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg, status,2
   228 ;; Tracked objects:
   229 ;;		On entry : B00/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   233 ;;      Params:         0       0       0       0       0
   234 ;;      Locals:         0       0       0       0       0
   235 ;;      Temps:          0       0       0       0       0
   236 ;;      Totals:         0       0       0       0       0
   237 ;;Total ram usage:        0 bytes
   238 ;; Hardware stack levels required when called: 1
   239 ;; This function calls:
   240 ;;		Nothing
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246  0041                     _main:	
   247                           ;psect for function _main
   248                           
   249  0041                     l621:	
   250                           ;incstack = 0
   251                           ; Regs used in _main: [wreg+status,2]
   252                           
   253                           
   254                           ;main.c: 4:     OPTION_REG = 0x01;
   255  0041  3001               	movlw	1
   256  0042  1683               	bsf	3,5	;RP0=1, select bank1
   257  0043  1303               	bcf	3,6	;RP1=0, select bank1
   258  0044  0081               	movwf	1	;volatile
   259                           
   260                           ;main.c: 5:     TMR0 = 5;
   261  0045  3005               	movlw	5
   262  0046  1283               	bcf	3,5	;RP0=0, select bank0
   263  0047  1303               	bcf	3,6	;RP1=0, select bank0
   264  0048  0081               	movwf	1	;volatile
   265  0049                     l623:
   266                           
   267                           ;main.c: 6:     INTCONbits.T0IE = 1;
   268  0049  168B               	bsf	11,5	;volatile
   269  004A                     l625:
   270                           
   271                           ;main.c: 7:     INTCONbits.T0IF = 0;
   272  004A  110B               	bcf	11,2	;volatile
   273  004B                     l627:
   274                           
   275                           ;main.c: 8:     INTCONbits.GIE = 1;
   276  004B  178B               	bsf	11,7	;volatile
   277  004C                     l629:
   278                           
   279                           ;main.c: 10:     TRISD = 0x00;
   280  004C  1683               	bsf	3,5	;RP0=1, select bank1
   281  004D  1303               	bcf	3,6	;RP1=0, select bank1
   282  004E  0188               	clrf	8	;volatile
   283  004F                     l631:
   284                           
   285                           ;main.c: 11:     PORTD = 0xFF;
   286  004F  30FF               	movlw	255
   287  0050  1283               	bcf	3,5	;RP0=0, select bank0
   288  0051  1303               	bcf	3,6	;RP1=0, select bank0
   289  0052  0088               	movwf	8	;volatile
   290  0053                     l17:	
   291                           ;main.c: 13:     while(1){}
   292                           
   293  0053                     l18:
   294  0053  2853               	goto	l17
   295  0054  120A  118A  280C   	ljmp	start
   296  0057                     __end_of_main:
   297                           
   298                           	psect	text1
   299  0015                     __ptext1:	
   300 ;; *************** function _ISR *****************
   301 ;; Defined at:
   302 ;;		line 18 in file "main.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;		None
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, status,2, status,0
   311 ;; Tracked objects:
   312 ;;		On entry : 0/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   316 ;;      Params:         0       0       0       0       0
   317 ;;      Locals:         0       0       0       0       0
   318 ;;      Temps:          2       0       0       0       0
   319 ;;      Totals:         2       0       0       0       0
   320 ;;Total ram usage:        2 bytes
   321 ;; Hardware stack levels used: 1
   322 ;; This function calls:
   323 ;;		Nothing
   324 ;; This function is called by:
   325 ;;		Interrupt level 1
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329  0015                     _ISR:	
   330                           ;psect for function _ISR
   331                           
   332  0015                     i1l633:
   333                           
   334                           ;main.c: 19:     static unsigned int counter = 0;;main.c: 20:     if(INTCONbits.T0IF == 
      +                          1){
   335  0015  1D0B               	btfss	11,2	;volatile
   336  0016  2818               	goto	u1_21
   337  0017  2819               	goto	u1_20
   338  0018                     u1_21:
   339  0018  283A               	goto	i1l29
   340  0019                     u1_20:
   341  0019                     i1l635:
   342                           
   343                           ;main.c: 21:         TMR0 = 5;
   344  0019  3005               	movlw	5
   345  001A  1283               	bcf	3,5	;RP0=0, select bank0
   346  001B  1303               	bcf	3,6	;RP1=0, select bank0
   347  001C  0081               	movwf	1	;volatile
   348                           
   349                           ;main.c: 22:         counter++;
   350  001D  3001               	movlw	1
   351  001E  07F0               	addwf	ISR@counter,f
   352  001F  1803               	skipnc
   353  0020  0AF1               	incf	ISR@counter+1,f
   354  0021  3000               	movlw	0
   355  0022  07F1               	addwf	ISR@counter+1,f
   356  0023                     i1l637:
   357                           
   358                           ;main.c: 23:         if(counter == 100){
   359  0023  3064               	movlw	100
   360  0024  0670               	xorwf	ISR@counter,w
   361  0025  0471               	iorwf	ISR@counter+1,w
   362  0026  1D03               	btfss	3,2
   363  0027  2829               	goto	u2_21
   364  0028  282A               	goto	u2_20
   365  0029                     u2_21:
   366  0029  2839               	goto	i1l643
   367  002A                     u2_20:
   368  002A                     i1l639:
   369                           
   370                           ;main.c: 24:             PORTDbits.RD0 = ~PORTDbits.RD0;
   371  002A  1003               	clrc
   372  002B  1C08               	btfss	8,0	;volatile
   373  002C  1403               	setc
   374  002D  1803               	btfsc	3,0
   375  002E  2830               	goto	u3_21
   376  002F  2834               	goto	u3_20
   377  0030                     u3_21:
   378  0030  1283               	bcf	3,5	;RP0=0, select bank0
   379  0031  1303               	bcf	3,6	;RP1=0, select bank0
   380  0032  1408               	bsf	8,0	;volatile
   381  0033  2837               	goto	u4_24
   382  0034                     u3_20:
   383  0034  1283               	bcf	3,5	;RP0=0, select bank0
   384  0035  1303               	bcf	3,6	;RP1=0, select bank0
   385  0036  1008               	bcf	8,0	;volatile
   386  0037                     u4_24:
   387  0037                     i1l641:
   388                           
   389                           ;main.c: 25:             counter = 0;
   390  0037  01F0               	clrf	ISR@counter
   391  0038  01F1               	clrf	ISR@counter+1
   392  0039                     i1l643:
   393                           
   394                           ;main.c: 27:         INTCONbits.T0IF = 0;
   395  0039  110B               	bcf	11,2	;volatile
   396  003A                     i1l29:
   397  003A  0873               	movf	??_ISR+1,w
   398  003B  008A               	movwf	10
   399  003C  0E72               	swapf	??_ISR,w
   400  003D  0083               	movwf	3
   401  003E  0EFE               	swapf	btemp,f
   402  003F  0E7E               	swapf	btemp,w
   403  0040  0009               	retfie
   404  0041                     __end_of_ISR:
   405  007E                     btemp	set	126	;btemp
   406  007E                     wtemp0	set	126
   407                           
   408                           	psect	intentry
   409  0004                     __pintentry:	
   410                           ;incstack = 0
   411                           ; Regs used in _ISR: [wreg+status,2+status,0]
   412                           
   413  0004                     interrupt_function:
   414  007E                     saved_w	set	btemp
   415  0004  00FE               	movwf	btemp
   416  0005  0E03               	swapf	3,w
   417  0006  00F2               	movwf	??_ISR
   418  0007  080A               	movf	10,w
   419  0008  00F3               	movwf	??_ISR+1
   420  0009  120A  118A  2815   	ljmp	_ISR
   421                           
   422                           	psect	idloc
   423                           
   424                           ;Config register IDLOC0 @ 0x2000
   425                           ;	unspecified, using default values
   426  2000                     	org	8192
   427  2000  3FFF               	dw	16383
   428                           
   429                           ;Config register IDLOC1 @ 0x2001
   430                           ;	unspecified, using default values
   431  2001                     	org	8193
   432  2001  3FFF               	dw	16383
   433                           
   434                           ;Config register IDLOC2 @ 0x2002
   435                           ;	unspecified, using default values
   436  2002                     	org	8194
   437  2002  3FFF               	dw	16383
   438                           
   439                           ;Config register IDLOC3 @ 0x2003
   440                           ;	unspecified, using default values
   441  2003                     	org	8195
   442  2003  3FFF               	dw	16383
   443                           
   444                           	psect	config
   445                           
   446                           ;Config register CONFIG @ 0x2007
   447                           ;	Oscillator Selection bits
   448                           ;	FOSC = XT, XT oscillator
   449                           ;	Watchdog Timer Enable bit
   450                           ;	WDTE = OFF, WDT disabled
   451                           ;	Power-up Timer Enable bit
   452                           ;	PWRTE = OFF, PWRT disabled
   453                           ;	Brown-out Reset Enable bit
   454                           ;	BOREN = OFF, BOR disabled
   455                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   456                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   457                           ;	Data EEPROM Memory Code Protection bit
   458                           ;	CPD = OFF, Data EEPROM code protection off
   459                           ;	Flash Program Memory Write Enable bits
   460                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   461                           ;	In-Circuit Debugger Mode bit
   462                           ;	DEBUG = 0x1, unprogrammed default
   463                           ;	Flash Program Memory Code Protection bit
   464                           ;	CP = OFF, Code protection off
   465  2007                     	org	8199
   466  2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jul 21 10:40:37 2022

                     l17 0053                       l18 0053                      l621 0041  
                    l631 004F                      l623 0049                      l625 004A  
                    l627 004B                      l629 004C                      _ISR 0015  
                   ?_ISR 0072                     i1l29 003A                     _TMR0 0001  
                   u1_20 0019                     u1_21 0018                     u2_20 002A  
                   u2_21 0029                     u3_20 0034                     u3_21 0030  
                   u4_24 0037                     _main 0041                     btemp 007E  
                   start 000C                    ??_ISR 0072                    ?_main 0072  
                  i1l641 0037                    i1l633 0015                    i1l643 0039  
                  i1l635 0019                    i1l637 0023                    i1l639 002A  
                  _PORTD 0008                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0057                   ??_main 0074                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0072               __pmaintext 0041  
             __pintentry 0004                  __ptext1 0015     end_of_initialization 0011  
              _PORTDbits 0008      start_initialization 000F              __end_of_ISR 0041  
            __pbssCOMMON 0070                ___latbits 0002               ISR@counter 0070  
      interrupt_function 0004               _INTCONbits 000B                 intlevel1 0000  
             _OPTION_REG 0081  
