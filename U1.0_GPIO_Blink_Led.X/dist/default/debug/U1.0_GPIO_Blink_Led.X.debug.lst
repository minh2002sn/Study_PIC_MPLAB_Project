

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Jul 09 16:45:37 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 2.40
    12                           ; Generated 17/11/2021 GMT
    13                           ; 
    14                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0008                     _PORTD	set	8
   167  0088                     _TRISD	set	136
   168                           
   169                           	psect	cinit
   170  07FC                     start_initialization:	
   171                           ; #config settings
   172                           
   173  07FC                     __initialization:
   174  07FC                     end_of_initialization:	
   175                           ;End of C runtime variable initialization code
   176                           
   177  07FC                     __end_of__initialization:
   178  07FC  0183               	clrf	3
   179  07FD  120A  118A  2F44   	ljmp	_main	;jump to C main() function
   180                           
   181                           	psect	cstackCOMMON
   182  0071                     __pcstackCOMMON:
   183  0071                     ?_main:
   184  0071                     ??_main:	
   185                           ; 1 bytes @ 0x0
   186                           
   187                           
   188                           ; 1 bytes @ 0x0
   189  0071                     	ds	2
   190  0073                     main@i:
   191                           
   192                           ; 2 bytes @ 0x2
   193  0073                     	ds	2
   194  0075                     main@i_37:
   195                           
   196                           ; 2 bytes @ 0x4
   197  0075                     	ds	2
   198  0077                     main@i_38:
   199                           
   200                           ; 2 bytes @ 0x6
   201  0077                     	ds	2
   202  0079                     main@i_39:
   203                           
   204                           ; 2 bytes @ 0x8
   205  0079                     	ds	2
   206  007B                     main@mask:
   207                           
   208                           ; 1 bytes @ 0xA
   209  007B                     	ds	1
   210                           
   211                           	psect	maintext
   212  0744                     __pmaintext:	
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 4 in file "main.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;  i               2    8[COMMON] int 
   223 ;;  i               2    6[COMMON] int 
   224 ;;  i               2    4[COMMON] int 
   225 ;;  i               2    2[COMMON] int 
   226 ;;  mask            1   10[COMMON] unsigned char 
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, status,2, status,0, btemp+1
   231 ;; Tracked objects:
   232 ;;		On entry : B00/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   236 ;;      Params:         0       0       0       0       0
   237 ;;      Locals:         9       0       0       0       0
   238 ;;      Temps:          2       0       0       0       0
   239 ;;      Totals:        11       0       0       0       0
   240 ;;Total ram usage:       11 bytes
   241 ;; This function calls:
   242 ;;		Nothing
   243 ;; This function is called by:
   244 ;;		Startup code after reset
   245 ;; This function uses a non-reentrant model
   246 ;;
   247                           
   248  0744                     _main:	
   249                           ;psect for function _main
   250                           
   251  0744                     l614:	
   252                           ;incstack = 0
   253                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   254                           
   255                           
   256                           ;main.c: 6:     TRISD = 0;
   257  0744  1683               	bsf	3,5	;RP0=1, select bank1
   258  0745  1303               	bcf	3,6	;RP1=0, select bank1
   259  0746  0188               	clrf	8	;volatile
   260  0747                     l616:
   261                           
   262                           ;main.c: 7:     PORTD = 0xFF;
   263  0747  30FF               	movlw	255
   264  0748  1283               	bcf	3,5	;RP0=0, select bank0
   265  0749  1303               	bcf	3,6	;RP1=0, select bank0
   266  074A  0088               	movwf	8	;volatile
   267  074B                     l618:
   268                           
   269                           ;main.c: 9:     uint8_t mask = 0xFE;
   270  074B  30FE               	movlw	254
   271  074C  00F1               	movwf	??_main
   272  074D  0871               	movf	??_main,w
   273  074E  00FB               	movwf	main@mask
   274  074F                     l11:	
   275                           ;main.c: 11:     while(1){
   276                           
   277                           
   278                           ;main.c: 12:         for(int i = 0; i < 8; i++){
   279  074F  01F3               	clrf	main@i
   280  0750  01F4               	clrf	main@i+1
   281  0751                     l624:
   282                           
   283                           ;main.c: 13:             mask = (mask << 1);
   284  0751  087B               	movf	main@mask,w
   285  0752  00F1               	movwf	??_main
   286  0753  0771               	addwf	??_main,w
   287  0754  00F2               	movwf	??_main+1
   288  0755  0872               	movf	??_main+1,w
   289  0756  00FB               	movwf	main@mask
   290  0757                     l626:
   291                           
   292                           ;main.c: 14:             PORTD = mask;
   293  0757  087B               	movf	main@mask,w
   294  0758  1283               	bcf	3,5	;RP0=0, select bank0
   295  0759  1303               	bcf	3,6	;RP1=0, select bank0
   296  075A  0088               	movwf	8	;volatile
   297  075B                     l628:
   298                           
   299                           ;main.c: 15:             _delay((unsigned long)((100)*(4000000/4000.0)));
   300  075B  3082               	movlw	130
   301  075C  00F2               	movwf	??_main+1
   302  075D  30DD               	movlw	221
   303  075E  00F1               	movwf	??_main
   304  075F                     u57:
   305  075F  0BF1               	decfsz	??_main,f
   306  0760  2F5F               	goto	u57
   307  0761  0BF2               	decfsz	??_main+1,f
   308  0762  2F5F               	goto	u57
   309  0763  2F64               	nop2
   310  0764                     l630:
   311                           
   312                           ;main.c: 16:         }
   313  0764  3001               	movlw	1
   314  0765  07F3               	addwf	main@i,f
   315  0766  1803               	skipnc
   316  0767  0AF4               	incf	main@i+1,f
   317  0768  3000               	movlw	0
   318  0769  07F4               	addwf	main@i+1,f
   319  076A                     l632:
   320  076A  0874               	movf	main@i+1,w
   321  076B  3A80               	xorlw	128
   322  076C  00FF               	movwf	btemp+1
   323  076D  3080               	movlw	128
   324  076E  027F               	subwf	btemp+1,w
   325  076F  1D03               	skipz
   326  0770  2F73               	goto	u15
   327  0771  3008               	movlw	8
   328  0772  0273               	subwf	main@i,w
   329  0773                     u15:
   330  0773  1C03               	skipc
   331  0774  2F76               	goto	u11
   332  0775  2F77               	goto	u10
   333  0776                     u11:
   334  0776  2F51               	goto	l624
   335  0777                     u10:
   336  0777                     l13:
   337                           
   338                           ;main.c: 17:         mask = 0x01;
   339  0777  01FB               	clrf	main@mask
   340  0778  0AFB               	incf	main@mask,f
   341  0779                     l634:
   342                           
   343                           ;main.c: 18:         for(int i = 0; i < 8; i++){
   344  0779  01F5               	clrf	main@i_37
   345  077A  01F6               	clrf	main@i_37+1
   346  077B                     l640:
   347                           
   348                           ;main.c: 19:             mask = (mask << 1) | 0x01;
   349  077B  1403               	setc
   350  077C  0DFB               	rlf	main@mask,f
   351  077D                     l642:
   352                           
   353                           ;main.c: 20:             PORTD = mask;
   354  077D  087B               	movf	main@mask,w
   355  077E  1283               	bcf	3,5	;RP0=0, select bank0
   356  077F  1303               	bcf	3,6	;RP1=0, select bank0
   357  0780  0088               	movwf	8	;volatile
   358  0781                     l644:
   359                           
   360                           ;main.c: 21:             _delay((unsigned long)((100)*(4000000/4000.0)));
   361  0781  3082               	movlw	130
   362  0782  00F2               	movwf	??_main+1
   363  0783  30DD               	movlw	221
   364  0784  00F1               	movwf	??_main
   365  0785                     u67:
   366  0785  0BF1               	decfsz	??_main,f
   367  0786  2F85               	goto	u67
   368  0787  0BF2               	decfsz	??_main+1,f
   369  0788  2F85               	goto	u67
   370  0789  2F8A               	nop2
   371  078A                     l646:
   372                           
   373                           ;main.c: 22:         }
   374  078A  3001               	movlw	1
   375  078B  07F5               	addwf	main@i_37,f
   376  078C  1803               	skipnc
   377  078D  0AF6               	incf	main@i_37+1,f
   378  078E  3000               	movlw	0
   379  078F  07F6               	addwf	main@i_37+1,f
   380  0790                     l648:
   381  0790  0876               	movf	main@i_37+1,w
   382  0791  3A80               	xorlw	128
   383  0792  00FF               	movwf	btemp+1
   384  0793  3080               	movlw	128
   385  0794  027F               	subwf	btemp+1,w
   386  0795  1D03               	skipz
   387  0796  2F99               	goto	u25
   388  0797  3008               	movlw	8
   389  0798  0275               	subwf	main@i_37,w
   390  0799                     u25:
   391  0799  1C03               	skipc
   392  079A  2F9C               	goto	u21
   393  079B  2F9D               	goto	u20
   394  079C                     u21:
   395  079C  2F7B               	goto	l640
   396  079D                     u20:
   397  079D                     l650:
   398                           
   399                           ;main.c: 23:         mask = 0x7F;
   400  079D  307F               	movlw	127
   401  079E  00F1               	movwf	??_main
   402  079F  0871               	movf	??_main,w
   403  07A0  00FB               	movwf	main@mask
   404  07A1                     l652:
   405                           
   406                           ;main.c: 24:         for(int i = 0; i < 8; i++){
   407  07A1  01F7               	clrf	main@i_38
   408  07A2  01F8               	clrf	main@i_38+1
   409  07A3                     l658:
   410                           
   411                           ;main.c: 25:             mask = (mask >> 1);
   412  07A3  087B               	movf	main@mask,w
   413  07A4  00F1               	movwf	??_main
   414  07A5  1003               	clrc
   415  07A6  0C71               	rrf	??_main,w
   416  07A7  00F2               	movwf	??_main+1
   417  07A8  0872               	movf	??_main+1,w
   418  07A9  00FB               	movwf	main@mask
   419  07AA                     l660:
   420                           
   421                           ;main.c: 26:             PORTD = mask;
   422  07AA  087B               	movf	main@mask,w
   423  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   424  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   425  07AD  0088               	movwf	8	;volatile
   426  07AE                     l662:
   427                           
   428                           ;main.c: 27:             _delay((unsigned long)((100)*(4000000/4000.0)));
   429  07AE  3082               	movlw	130
   430  07AF  00F2               	movwf	??_main+1
   431  07B0  30DD               	movlw	221
   432  07B1  00F1               	movwf	??_main
   433  07B2                     u77:
   434  07B2  0BF1               	decfsz	??_main,f
   435  07B3  2FB2               	goto	u77
   436  07B4  0BF2               	decfsz	??_main+1,f
   437  07B5  2FB2               	goto	u77
   438  07B6  2FB7               	nop2
   439  07B7                     l664:
   440                           
   441                           ;main.c: 28:         }
   442  07B7  3001               	movlw	1
   443  07B8  07F7               	addwf	main@i_38,f
   444  07B9  1803               	skipnc
   445  07BA  0AF8               	incf	main@i_38+1,f
   446  07BB  3000               	movlw	0
   447  07BC  07F8               	addwf	main@i_38+1,f
   448  07BD                     l666:
   449  07BD  0878               	movf	main@i_38+1,w
   450  07BE  3A80               	xorlw	128
   451  07BF  00FF               	movwf	btemp+1
   452  07C0  3080               	movlw	128
   453  07C1  027F               	subwf	btemp+1,w
   454  07C2  1D03               	skipz
   455  07C3  2FC6               	goto	u35
   456  07C4  3008               	movlw	8
   457  07C5  0277               	subwf	main@i_38,w
   458  07C6                     u35:
   459  07C6  1C03               	skipc
   460  07C7  2FC9               	goto	u31
   461  07C8  2FCA               	goto	u30
   462  07C9                     u31:
   463  07C9  2FA3               	goto	l658
   464  07CA                     u30:
   465  07CA                     l668:
   466                           
   467                           ;main.c: 29:         mask = 0x80;
   468  07CA  3080               	movlw	128
   469  07CB  00F1               	movwf	??_main
   470  07CC  0871               	movf	??_main,w
   471  07CD  00FB               	movwf	main@mask
   472  07CE                     l670:
   473                           
   474                           ;main.c: 30:         for(int i = 0; i < 8; i++){
   475  07CE  01F9               	clrf	main@i_39
   476  07CF  01FA               	clrf	main@i_39+1
   477  07D0                     l676:
   478                           
   479                           ;main.c: 31:             mask = (mask >> 1) | 0x80;
   480  07D0  087B               	movf	main@mask,w
   481  07D1  00F1               	movwf	??_main
   482  07D2  1003               	clrc
   483  07D3  0C71               	rrf	??_main,w
   484  07D4  3880               	iorlw	128
   485  07D5  00F2               	movwf	??_main+1
   486  07D6  0872               	movf	??_main+1,w
   487  07D7  00FB               	movwf	main@mask
   488  07D8                     l678:
   489                           
   490                           ;main.c: 32:             PORTD = mask;
   491  07D8  087B               	movf	main@mask,w
   492  07D9  1283               	bcf	3,5	;RP0=0, select bank0
   493  07DA  1303               	bcf	3,6	;RP1=0, select bank0
   494  07DB  0088               	movwf	8	;volatile
   495  07DC                     l680:
   496                           
   497                           ;main.c: 33:             _delay((unsigned long)((100)*(4000000/4000.0)));
   498  07DC  3082               	movlw	130
   499  07DD  00F2               	movwf	??_main+1
   500  07DE  30DD               	movlw	221
   501  07DF  00F1               	movwf	??_main
   502  07E0                     u87:
   503  07E0  0BF1               	decfsz	??_main,f
   504  07E1  2FE0               	goto	u87
   505  07E2  0BF2               	decfsz	??_main+1,f
   506  07E3  2FE0               	goto	u87
   507  07E4  2FE5               	nop2
   508  07E5                     l682:
   509                           
   510                           ;main.c: 34:         }
   511  07E5  3001               	movlw	1
   512  07E6  07F9               	addwf	main@i_39,f
   513  07E7  1803               	skipnc
   514  07E8  0AFA               	incf	main@i_39+1,f
   515  07E9  3000               	movlw	0
   516  07EA  07FA               	addwf	main@i_39+1,f
   517  07EB                     l684:
   518  07EB  087A               	movf	main@i_39+1,w
   519  07EC  3A80               	xorlw	128
   520  07ED  00FF               	movwf	btemp+1
   521  07EE  3080               	movlw	128
   522  07EF  027F               	subwf	btemp+1,w
   523  07F0  1D03               	skipz
   524  07F1  2FF4               	goto	u45
   525  07F2  3008               	movlw	8
   526  07F3  0279               	subwf	main@i_39,w
   527  07F4                     u45:
   528  07F4  1C03               	skipc
   529  07F5  2FF7               	goto	u41
   530  07F6  2FF8               	goto	u40
   531  07F7                     u41:
   532  07F7  2FD0               	goto	l676
   533  07F8                     u40:
   534  07F8  2F4F               	goto	l11
   535  07F9  120A  118A  2801   	ljmp	start
   536  07FC                     __end_of_main:
   537  007E                     btemp	set	126	;btemp
   538  007E                     wtemp0	set	126
   539                           
   540                           	psect	idloc
   541                           
   542                           ;Config register IDLOC0 @ 0x2000
   543                           ;	unspecified, using default values
   544  2000                     	org	8192
   545  2000  3FFF               	dw	16383
   546                           
   547                           ;Config register IDLOC1 @ 0x2001
   548                           ;	unspecified, using default values
   549  2001                     	org	8193
   550  2001  3FFF               	dw	16383
   551                           
   552                           ;Config register IDLOC2 @ 0x2002
   553                           ;	unspecified, using default values
   554  2002                     	org	8194
   555  2002  3FFF               	dw	16383
   556                           
   557                           ;Config register IDLOC3 @ 0x2003
   558                           ;	unspecified, using default values
   559  2003                     	org	8195
   560  2003  3FFF               	dw	16383
   561                           
   562                           	psect	config
   563                           
   564                           ;Config register CONFIG @ 0x2007
   565                           ;	Oscillator Selection bits
   566                           ;	FOSC = XT, XT oscillator
   567                           ;	Watchdog Timer Enable bit
   568                           ;	WDTE = ON, WDT enabled
   569                           ;	Power-up Timer Enable bit
   570                           ;	PWRTE = OFF, PWRT disabled
   571                           ;	Brown-out Reset Enable bit
   572                           ;	BOREN = ON, BOR enabled
   573                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   574                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   575                           ;	Data EEPROM Memory Code Protection bit
   576                           ;	CPD = OFF, Data EEPROM code protection off
   577                           ;	Flash Program Memory Write Enable bits
   578                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   579                           ;	In-Circuit Debugger Mode bit
   580                           ;	DEBUG = 0x1, unprogrammed default
   581                           ;	Flash Program Memory Code Protection bit
   582                           ;	CP = OFF, Code protection off
   583  2007                     	org	8199
   584  2007  3FFD               	dw	16381

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0     240
                                              0 COMMON    11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      B       B       1       84.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Jul 09 16:45:37 2022

                     l11 074F                       l13 0777                       u10 0777  
                     u11 0776                       u20 079D                       u21 079C  
                     u30 07CA                       u31 07C9                       u15 0773  
                     u40 07F8                       u41 07F7                       u25 0799  
                     u35 07C6                       u45 07F4                       u57 075F  
                     u67 0785                       u77 07B2                       u87 07E0  
                    l630 0764                      l614 0744                      l640 077B  
                    l632 076A                      l624 0751                      l616 0747  
                    l650 079D                      l642 077D                      l634 0779  
                    l626 0757                      l618 074B                      l660 07AA  
                    l652 07A1                      l644 0781                      l628 075B  
                    l670 07CE                      l662 07AE                      l646 078A  
                    l680 07DC                      l664 07B7                      l648 0790  
                    l682 07E5                      l666 07BD                      l658 07A3  
                    l684 07EB                      l676 07D0                      l668 07CA  
                    l678 07D8                     _main 0744                     btemp 007E  
                   start 0001                    ?_main 0071                    _PORTD 0008  
                  _TRISD 0088                    main@i 0073                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0071  __end_of__initialization 07FC           __pcstackCOMMON 0071  
             __pmaintext 0744     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002                 main@i_37 0075                 main@i_38 0077  
               main@i_39 0079                 main@mask 007B  
